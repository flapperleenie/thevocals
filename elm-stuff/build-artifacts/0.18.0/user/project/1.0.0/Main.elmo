var _user$project$Main$pickPart = F2(
	function (list, i) {
		return A2(
			_elm_lang$core$Maybe$withDefault,
			'',
			A2(
				_elm_lang$core$Array$get,
				i,
				_elm_lang$core$Array$fromList(list)));
	});
var _user$project$Main$generator = function (list) {
	return A2(
		_elm_lang$core$Random$int,
		0,
		_elm_lang$core$List$length(list) - 1);
};
var _user$project$Main$capitalize = function (str) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		function (_p0) {
			return _elm_lang$core$String$toUpper(
				A2(_elm_lang$core$String$left, 1, _p0));
		}(str),
		A2(_elm_lang$core$String$dropLeft, 1, str));
};
var _user$project$Main$OnResult = function (a) {
	return {ctor: 'OnResult', _0: a};
};
var _user$project$Main$generateRandomName = function () {
	var makeBand = function (x) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			'The ',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_user$project$Main$capitalize(
					A2(_user$project$Main$pickPart, _user$project$Parts$parts, x)),
				's'));
	};
	return A2(
		_elm_lang$core$Random$generate,
		_user$project$Main$OnResult,
		A2(
			_elm_lang$core$Random$map,
			makeBand,
			_user$project$Main$generator(_user$project$Parts$parts)));
}();
var _user$project$Main$pickRandomName = function () {
	var pickBand = function (x) {
		return A2(_user$project$Main$pickPart, _user$project$Bands$bands, x);
	};
	return A2(
		_elm_lang$core$Random$generate,
		_user$project$Main$OnResult,
		A2(
			_elm_lang$core$Random$map,
			pickBand,
			_user$project$Main$generator(_user$project$Bands$bands)));
}();
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'Generate':
				return {ctor: '_Tuple2', _0: model, _1: _user$project$Main$generateRandomName};
			case 'Pick':
				return {ctor: '_Tuple2', _0: model, _1: _user$project$Main$pickRandomName};
			default:
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_p1._0,
					{ctor: '[]'});
		}
	});
var _user$project$Main$Pick = {ctor: 'Pick'};
var _user$project$Main$Generate = {ctor: 'Generate'};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$h3,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(model),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('btn'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Generate),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$span,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Generate new name'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('btn'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Pick),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$span,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Pick a band'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		init: {ctor: '_Tuple2', _0: '', _1: _user$project$Main$generateRandomName},
		subscriptions: function (_p2) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
